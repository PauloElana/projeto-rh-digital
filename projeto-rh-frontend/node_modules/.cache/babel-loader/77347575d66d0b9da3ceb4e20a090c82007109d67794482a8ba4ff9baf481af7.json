{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\trabalhos Bento quirino\\\\New TCC\\\\projeto-rh-frontend\\\\src\\\\components\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AvatarRH from './AvatarRH';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [finished, setFinished] = useState(false);\n  const questions = [{\n    key: 'name',\n    text: 'Qual é o seu nome completo?'\n  }, {\n    key: 'email',\n    text: 'Qual é o seu e-mail?'\n  }, {\n    key: 'area',\n    text: 'Qual sua área de interesse profissional?'\n  }, {\n    key: 'experience',\n    text: 'Qual seu nível de experiência?'\n  }, {\n    key: 'jobSearch',\n    text: 'Você está buscando oportunidades de trabalho atualmente?'\n  }];\n  const handleAnswer = e => {\n    e.preventDefault();\n    const input = e.target.elements.userInput.value;\n    const currentKey = questions[step].key;\n    const updatedAnswers = {\n      ...answers,\n      [currentKey]: input\n    };\n    setAnswers(updatedAnswers);\n    e.target.reset();\n    if (step + 1 < questions.length) {\n      setStep(step + 1);\n    } else {\n      fetch('http://localhost:5000/api/respostas', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedAnswers)\n      }).then(res => res.json()).then(data => {\n        console.log(\"Salvo no backend:\", data);\n        setFinished(true);\n      }).catch(err => console.error(\"Erro ao salvar:\", err));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AvatarRH, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), !finished ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAnswer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: questions[step].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"userInput\",\n        required: true,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Obrigado! Suas respostas foram enviadas com sucesso. \\u2705\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"DFCjDbmKl0oFIhDm6NAFLaJH0Zc=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","AvatarRH","jsxDEV","_jsxDEV","ChatBot","_s","step","setStep","answers","setAnswers","finished","setFinished","questions","key","text","handleAnswer","e","preventDefault","input","target","elements","userInput","value","currentKey","updatedAnswers","reset","length","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","catch","err","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","name","required","autoFocus","type","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/trabalhos Bento quirino/New TCC/projeto-rh-frontend/src/components/ChatBot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AvatarRH from './AvatarRH';\r\n\r\nconst ChatBot = () => {\r\n  const [step, setStep] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  const questions = [\r\n    { key: 'name', text: 'Qual é o seu nome completo?' },\r\n    { key: 'email', text: 'Qual é o seu e-mail?' },\r\n    { key: 'area', text: 'Qual sua área de interesse profissional?' },\r\n    { key: 'experience', text: 'Qual seu nível de experiência?' },\r\n    { key: 'jobSearch', text: 'Você está buscando oportunidades de trabalho atualmente?' },\r\n  ];\r\n\r\n  const handleAnswer = (e) => {\r\n    e.preventDefault();\r\n    const input = e.target.elements.userInput.value;\r\n    const currentKey = questions[step].key;\r\n\r\n    const updatedAnswers = { ...answers, [currentKey]: input };\r\n    setAnswers(updatedAnswers);\r\n    e.target.reset();\r\n\r\n    if (step + 1 < questions.length) {\r\n      setStep(step + 1);\r\n    } else {\r\n      fetch('http://localhost:5000/api/respostas', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(updatedAnswers)\r\n      })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          console.log(\"Salvo no backend:\", data);\r\n          setFinished(true);\r\n        })\r\n        .catch(err => console.error(\"Erro ao salvar:\", err));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AvatarRH />\r\n      {!finished ? (\r\n        <form onSubmit={handleAnswer}>\r\n          <p>{questions[step].text}</p>\r\n          <input name=\"userInput\" required autoFocus />\r\n          <button type=\"submit\">Enviar</button>\r\n        </form>\r\n      ) : (\r\n        <p>Obrigado! Suas respostas foram enviadas com sucesso. ✅</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}